
'use strict';

const { RPCClient } = require('@alicloud/pop-core');

function hasOwnProperty(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

class Client extends RPCClient {
  constructor(config) {
    config.apiVersion = '2015-05-01';
    super(config);
  }

  activateService(params = {}, options) {
    return this.request('ActivateService', params, options);
  }

  addUserToGroup(params = {}, options) {
    return this.request('AddUserToGroup', params, options);
  }

  attachPolicyToGroup(params = {}, options) {
    return this.request('AttachPolicyToGroup', params, options);
  }

  attachPolicyToRole(params = {}, options) {
    return this.request('AttachPolicyToRole', params, options);
  }

  attachPolicyToUser(params = {}, options) {
    return this.request('AttachPolicyToUser', params, options);
  }

  bindMFADevice(params = {}, options) {
    return this.request('BindMFADevice', params, options);
  }

  changePassword(params = {}, options) {
    return this.request('ChangePassword', params, options);
  }

  clearAccountAlias(params = {}, options) {
    return this.request('ClearAccountAlias', params, options);
  }

  createAccessKey(params = {}, options) {
    return this.request('CreateAccessKey', params, options);
  }

  createGroup(params = {}, options) {
    return this.request('CreateGroup', params, options);
  }

  createLoginProfile(params = {}, options) {
    return this.request('CreateLoginProfile', params, options);
  }

  createPolicy(params = {}, options) {
    return this.request('CreatePolicy', params, options);
  }

  createPolicyVersion(params = {}, options) {
    return this.request('CreatePolicyVersion', params, options);
  }

  createRole(params = {}, options) {
    return this.request('CreateRole', params, options);
  }

  createSAMLProvider(params = {}, options) {
    return this.request('CreateSAMLProvider', params, options);
  }

  createUser(params = {}, options) {
    return this.request('CreateUser', params, options);
  }

  createVirtualMFADevice(params = {}, options) {
    return this.request('CreateVirtualMFADevice', params, options);
  }

  deactivateService(params = {}, options) {
    return this.request('DeactivateService', params, options);
  }

  deleteAccessKey(params = {}, options) {
    return this.request('DeleteAccessKey', params, options);
  }

  deleteGroup(params = {}, options) {
    return this.request('DeleteGroup', params, options);
  }

  deleteLoginProfile(params = {}, options) {
    return this.request('DeleteLoginProfile', params, options);
  }

  deletePolicy(params = {}, options) {
    return this.request('DeletePolicy', params, options);
  }

  deletePolicyVersion(params = {}, options) {
    return this.request('DeletePolicyVersion', params, options);
  }

  deleteRole(params = {}, options) {
    return this.request('DeleteRole', params, options);
  }

  deleteSAMLProvider(params = {}, options) {
    return this.request('DeleteSAMLProvider', params, options);
  }

  deleteUser(params = {}, options) {
    return this.request('DeleteUser', params, options);
  }

  deleteVirtualMFADevice(params = {}, options) {
    return this.request('DeleteVirtualMFADevice', params, options);
  }

  detachPolicyFromGroup(params = {}, options) {
    return this.request('DetachPolicyFromGroup', params, options);
  }

  detachPolicyFromRole(params = {}, options) {
    return this.request('DetachPolicyFromRole', params, options);
  }

  detachPolicyFromUser(params = {}, options) {
    return this.request('DetachPolicyFromUser', params, options);
  }

  getAccountAlias(params = {}, options) {
    return this.request('GetAccountAlias', params, options);
  }

  getAccountSummary(params = {}, options) {
    return this.request('GetAccountSummary', params, options);
  }

  getGroup(params = {}, options) {
    return this.request('GetGroup', params, options);
  }

  getLoginProfile(params = {}, options) {
    return this.request('GetLoginProfile', params, options);
  }

  getPasswordPolicy(params = {}, options) {
    return this.request('GetPasswordPolicy', params, options);
  }

  getPolicy(params = {}, options) {
    return this.request('GetPolicy', params, options);
  }

  getPolicyVersion(params = {}, options) {
    return this.request('GetPolicyVersion', params, options);
  }

  getRole(params = {}, options) {
    return this.request('GetRole', params, options);
  }

  getSAMLProvider(params = {}, options) {
    return this.request('GetSAMLProvider', params, options);
  }

  getSecurityPreference(params = {}, options) {
    return this.request('GetSecurityPreference', params, options);
  }

  getServiceStatus(params = {}, options) {
    return this.request('GetServiceStatus', params, options);
  }

  getUser(params = {}, options) {
    return this.request('GetUser', params, options);
  }

  getUserMFAInfo(params = {}, options) {
    return this.request('GetUserMFAInfo', params, options);
  }

  listAccessKeys(params = {}, options) {
    return this.request('ListAccessKeys', params, options);
  }

  listEntitiesForPolicy(params = {}, options) {
    return this.request('ListEntitiesForPolicy', params, options);
  }

  listGroups(params = {}, options) {
    return this.request('ListGroups', params, options);
  }

  listGroupsForUser(params = {}, options) {
    return this.request('ListGroupsForUser', params, options);
  }

  listPolicies(params = {}, options) {
    return this.request('ListPolicies', params, options);
  }

  listPoliciesForGroup(params = {}, options) {
    return this.request('ListPoliciesForGroup', params, options);
  }

  listPoliciesForRole(params = {}, options) {
    return this.request('ListPoliciesForRole', params, options);
  }

  listPoliciesForUser(params = {}, options) {
    return this.request('ListPoliciesForUser', params, options);
  }

  listPolicyVersions(params = {}, options) {
    return this.request('ListPolicyVersions', params, options);
  }

  listRoles(params = {}, options) {
    return this.request('ListRoles', params, options);
  }

  listRolesForService(params = {}, options) {
    return this.request('ListRolesForService', params, options);
  }

  listSAMLProviders(params = {}, options) {
    return this.request('ListSAMLProviders', params, options);
  }

  listUsers(params = {}, options) {
    return this.request('ListUsers', params, options);
  }

  listUsersForGroup(params = {}, options) {
    return this.request('ListUsersForGroup', params, options);
  }

  listVirtualMFADevices(params = {}, options) {
    return this.request('ListVirtualMFADevices', params, options);
  }

  removeUserFromGroup(params = {}, options) {
    return this.request('RemoveUserFromGroup', params, options);
  }

  setAccountAlias(params = {}, options) {
    return this.request('SetAccountAlias', params, options);
  }

  setDefaultPolicyVersion(params = {}, options) {
    return this.request('SetDefaultPolicyVersion', params, options);
  }

  setPasswordPolicy(params = {}, options) {
    return this.request('SetPasswordPolicy', params, options);
  }

  setSecurityPreference(params = {}, options) {
    return this.request('SetSecurityPreference', params, options);
  }

  unbindMFADevice(params = {}, options) {
    return this.request('UnbindMFADevice', params, options);
  }

  updateAccessKey(params = {}, options) {
    return this.request('UpdateAccessKey', params, options);
  }

  updateGroup(params = {}, options) {
    return this.request('UpdateGroup', params, options);
  }

  updateLoginProfile(params = {}, options) {
    return this.request('UpdateLoginProfile', params, options);
  }

  updateRole(params = {}, options) {
    return this.request('UpdateRole', params, options);
  }

  updateSAMLProvider(params = {}, options) {
    return this.request('UpdateSAMLProvider', params, options);
  }

  updateUser(params = {}, options) {
    return this.request('UpdateUser', params, options);
  }

}

module.exports = Client;
